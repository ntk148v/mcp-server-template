[project]
name = "{{ cookiecutter.module_name }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_description }}"
readme = "README.md"
requires-python = ">=3.12"
dependencies = ["mcp[cli]>=1.8.1"]

[project.scripts]
alertmanager-mcp-server = "{{ cookiecutter.module_name }}.main"

[tool.setuptools]
packages = ["{{ cookiecutter.module_name }}"]
package-dir = { "" = "src" }

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
    "pytest-cov>=6.1.1",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--cov=src --cov-report=term-missing"

[tool.coverage.run]
source = ["src/{{ cookiecutter.module_name }}"]
omit = ["*/__pycache__/*", "*/tests/*", "*/.venv/*", "*/venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
